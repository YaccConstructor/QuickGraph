<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>RNGLRCommon</name></assembly>
<members>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:Yard.Generators.RNGLR.AST.Tree`1.TraverseWithRanges``1(Microsoft.FSharp.Core.FSharpFunc{`0,System.Tuple{``0,``0}},Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{Yard.Generators.RNGLR.AST.AST,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{Yard.Generators.RNGLR.DataStructures.BlockResizeArray{System.Tuple{``0,``0}},Microsoft.FSharp.Core.Unit}})">
<summary>
 handleCycleNode is used for handling nodes, contained in cycles
   and having no children family, where each node has smaller position.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:Yard.Generators.RNGLR.AST.Tree`1.ChooseSingleAst">
<summary>
 Choose first correct subtree without cycles.
</summary>
</member>
<member name="M:Yard.Generators.RNGLR.AST.Tree`1.ChooseLongestMatch">
<summary>
 Select children, where the first subnode ends first.
 In case of ambiguity look at second one.
 If ranges are equal, then select one, having the smallest rule number.
 Eliminate cycles.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Yard.Generators.RNGLR.AST.AST">
<summary>
 Non-terminal expansion: production, family of children
 All nodes are stored in array, so there is a correspondence between integer and node.
 Family of children - For one nonTerminal there can be a lot of derivation trees.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Yard.Generators.RNGLR.AST.TranslateArguments`2">
<summary>
 Arguments for tanslation calling, seen by user
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Yard.Generators.RNGLR.AST">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Yard.Generators.RNGLR.DataStructures">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Yard.Generators.RNGLR.GraphIterator">

</member>
</members>
</doc>
